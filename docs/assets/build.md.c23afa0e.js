import{o as e,c as a,a as s}from"./app.2f713d2d.js";const t='{"title":"构建与预览","description":"","frontmatter":{},"headers":[{"level":2,"title":"构建","slug":"构建"},{"level":2,"title":"预览","slug":"预览"},{"level":2,"title":"压缩","slug":"压缩"},{"level":2,"title":"其它设置","slug":"其它设置"}],"relativePath":"build.md","lastUpdated":1626010470217}',d={},o=s('<h1 id="构建与预览"><a class="header-anchor" href="#构建与预览" aria-hidden="true">#</a> 构建与预览</h1><h2 id="构建"><a class="header-anchor" href="#构建" aria-hidden="true">#</a> 构建</h2><p>项目开发完成之后，可以执行 <code>pnpm build</code> 命令进行构建，构建打包成功之后，会在根目录生成 dist 文件夹，里面就是构建打包好的文件。</p><p>如果是需要构建测试环境，则执行 <code>pnpm build:test</code> 命令，对应会在根目录生成 dist-test 文件夹。</p><h2 id="预览"><a class="header-anchor" href="#预览" aria-hidden="true">#</a> 预览</h2><p>生成好的 dist 文件夹一般需要部署至服务器才算部署发布成功。但为了保证构建出来的文件能正常运行，开发者通常希望能在本地先预览一下，可执行 <code>pnpm serve</code> 或 <code>pnpm serve:test</code> 命令预览不同环境构建出的文件夹。</p><h2 id="压缩"><a class="header-anchor" href="#压缩" aria-hidden="true">#</a> 压缩</h2><p>在环境配置文件里设置 <code>VITE_BUILD_COMPRESS = gzip</code> 或 <code>VITE_BUILD_COMPRESS = brotli</code> 即可在构建时生成 <code>.gz</code> 或 <code>.br</code> 文件。</p><p>如果需要同时开启，则设置成 <code>VITE_BUILD_COMPRESS = gzip,brotli</code> 即可在构建时同时生成 <code>.gz</code> 和 <code>.br</code> 文件。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>brotli 是比 gzip 压缩率更高的算法，可以与 gzip 共存不会冲突，需要 nginx 安装指定模块并开启。</p></div><h2 id="其它设置"><a class="header-anchor" href="#其它设置" aria-hidden="true">#</a> 其它设置</h2><p>在环境配置文件里除了可以设置压缩选项，还可设置：</p><div class="language-dot"><pre><code><span class="token comment"># 是否在打包时生成 sourcemap</span>\n<span class="token attr-name">VITE_BUILD_SOURCEMAP</span> <span class="token operator">=</span> <span class="token attr-value">true</span>\n<span class="token comment"># 是否在打包时删除 console 代码</span>\n<span class="token attr-name">VITE_BUILD_DROP_CONSOLE</span> <span class="token operator">=</span> <span class="token attr-value">true</span>\n</code></pre></div>',13);d.render=function(s,t,d,n,r,c){return e(),a("div",null,[o])};export default d;export{t as __pageData};
