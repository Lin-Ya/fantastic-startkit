"use strict";(self.webpackChunkfantastic_template_docs=self.webpackChunkfantastic_template_docs||[]).push([[778],{3299:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-98281836",path:"/global-resources.html",title:"全局资源",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"SVG 图标",slug:"svg-图标",children:[]},{level:2,title:"图片",slug:"图片",children:[]},{level:2,title:"精灵图",slug:"精灵图",children:[]},{level:2,title:"样式",slug:"样式",children:[]},{level:2,title:"组件",slug:"组件",children:[{level:3,title:"全局组件",slug:"全局组件",children:[]},{level:3,title:"局部组件",slug:"局部组件",children:[]}]}],filePathRelative:"global-resources.md",git:{updatedTime:1627204102e3,contributors:[{name:"hooray",email:"304327508@qq.com",commits:2}]}}},256:(n,s,a)=>{a.r(s),a.d(s,{default:()=>v});var t=a(6359);const e=(0,t._)("h1",{id:"全局资源",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#全局资源","aria-hidden":"true"},"#"),(0,t.Uk)(" 全局资源")],-1),c=(0,t._)("h2",{id:"svg-图标",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#svg-图标","aria-hidden":"true"},"#"),(0,t.Uk)(" SVG 图标")],-1),p=(0,t.Uk)("越来越多项目开始使用 SVG 图标做为精灵图的替代品，本模板也提供了 SVG 图标支持，推荐去"),o={href:"https://www.iconfont.cn/",target:"_blank",rel:"noopener noreferrer"},l=(0,t.Uk)("阿里巴巴矢量图标库"),u=(0,t.Uk)("下载高质量 SVG 图标。"),k=(0,t.uE)('<p>使用 SVG 图标也很简单，首先将 svg 文件放到 <code>./src/assets/icons/</code> 目录下，然后在页面中就可以通过 <code>&lt;svg-icon /&gt;</code> 组件使用了，name 就是 svg 文件名，如下：</p><div class="language-html ext-html"><pre class="language-html"><code><span class="token comment">&lt;!-- &lt;svg-icon /&gt; 组件无需手动注册即可使用 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>example<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre></div><h2 id="图片" tabindex="-1"><a class="header-anchor" href="#图片" aria-hidden="true">#</a> 图片</h2><p>模板用到的图片资源都放在 <code>./src/assets/images/</code> 目录下，可自行新建文件夹分类管理。</p><h2 id="精灵图" tabindex="-1"><a class="header-anchor" href="#精灵图" aria-hidden="true">#</a> 精灵图</h2><p>精灵图又称雪碧图，原理是将多张小图合并到一张大图上，以便减少 HTTP 请求，提高网站访问速度。</p><div class="custom-container tip"><p class="custom-container-title">说明</p><p>在 HTTP/1.1 下，因<strong>队头阻塞</strong>的问题，如果在一个页面里需要展示多张小图，建议使用精灵图</p><p>但 HTTP/2 的<strong>多路复用</strong>特性，已经不太需要精灵图合并了，我们更建议使用 SVG 图标代替精灵图</p></div><p>精灵图原始图片的存放位置位于 <code>./src/assets/sprites/</code> 目录下，注意按文件夹区分。</p><p>项目运行前会根据文件夹生成对应的精灵图文件（精灵图图片和 <code>.scss</code> 资源文件），多个文件夹则会生成多个精灵图文件。需要注意的是，在项目运行时，修改文件夹里的图片，会重新生成相关精灵图文件，但如果新建文件夹，则需要重新运行项目才会生成对应精灵图文件。</p><p>可通过 <code>@include</code> 直接使用精灵图，无需手动引入 <code>.scss</code> 文件，使用方法如下：</p>',10),i=(0,t._)("div",{class:"language-scss ext-scss"},[(0,t._)("pre",{class:"language-scss"},[(0,t._)("code",null,[(0,t._)("span",{class:"token comment"},"// @include [文件夹名称]-sprite([文件名称]);"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token selector"},".icon "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"@include"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"example-sprite"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("address"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 输出"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token selector"},".icon "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"background-image"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token url"},"url"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("img/example.326b35aec20837b9c08563c654422fe6.326b35ae.png"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"background-position"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 0px 0px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"background-size"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 210px 210px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"width"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 100px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"height"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 100px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),r=(0,t._)("div",{class:"language-scss ext-scss"},[(0,t._)("pre",{class:"language-scss"},[(0,t._)("code",null,[(0,t._)("span",{class:"token comment"},"// @include all-[文件夹名称]-sprites;"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"@include"),(0,t.Uk)(" all-example-sprites"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 输出"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token selector"},".example-address-sprites "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"background-image"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token url"},"url"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("img/example.326b35aec20837b9c08563c654422fe6.326b35ae.png"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"background-position"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 0 0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"background-size"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 210px 210px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"width"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 100px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"height"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 100px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token selector"},".example-feedback-sprites "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"background-image"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token url"},"url"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("img/example.326b35aec20837b9c08563c654422fe6.326b35ae.png"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"background-position"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" -110px 0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"background-size"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 210px 210px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"width"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 100px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"height"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 100px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token selector"},".example-payment-sprites "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"background-image"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token url"},"url"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("img/example.326b35aec20837b9c08563c654422fe6.326b35ae.png"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"background-position"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 0 -110px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"background-size"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 210px 210px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"width"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 100px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token property"},"height"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 100px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])])],-1),d=(0,t.uE)('<p>如果是小型项目，静态图片不多，可全部放在一个文件夹内；如果是中大型项目，文件夹可按模块来划分，这样不同的模块最终会生成各自的精灵图文件。</p><h2 id="样式" tabindex="-1"><a class="header-anchor" href="#样式" aria-hidden="true">#</a> 样式</h2><p>样式存放目录为 <code>./src/assets/styles/</code> ，因为 Vue 的文件特性，页面样式建议写在 <code>.vue</code> 文件里，所以该目录只存放全局样式，方便统一管理。</p><p>此目录下还有一个特殊目录，即 <code>./src/assets/styles/resources/</code> ，这是全局 SCSS 资源目录，首先这个目录里只支持 <code>.scss</code> 文件，其次在这个目录里的文件，无需在页面上引用即可生效并使用。</p><p>同样，精灵图目录下生成的 SCSS 资源也是全局可调用的。</p><div class="custom-container tip"><p class="custom-container-title">说明</p><p>全局 SCSS 资源并不是全局样式，是变量、@mixin 、@function 这些东西</p></div><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h2><h3 id="全局组件" tabindex="-1"><a class="header-anchor" href="#全局组件" aria-hidden="true">#</a> 全局组件</h3><p>全局组件存放在 <code>./src/components/</code> 目录下，需要注意各个组件按文件夹进行区分。</p><p>每个组件的文件夹内至少保留一个文件名为 <code>index.vue</code> 的组件入口（可参考 <code>SvgIcon</code> 组件），组件必须设置 <code>name</code> 并保证其唯一，因为自动注册会将组件的 <code>name</code> 设为组件名。</p><p>虽然文件夹名称和组件 <code>name</code> 无关联，但建议与组件 <code>name</code> 保持一致。</p>',11),_=(0,t.Uk)("推荐使用 "),h=(0,t._)("code",null,"pnpm new",-1),U=(0,t.Uk)(" 指令进行组件生成，详细可查看《"),g=(0,t.Uk)("代码文件自动生成"),m=(0,t.Uk)("》。"),x=(0,t._)("h3",{id:"局部组件",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#局部组件","aria-hidden":"true"},"#"),(0,t.Uk)(" 局部组件")],-1),b=(0,t._)("p",null,[(0,t.Uk)("局部组件没有提供专门的存放目录，不过我们建议局部组件跟随页面走，你可以在每个页面文件夹下，建立一个 "),(0,t._)("code",null,"component"),(0,t.Uk)(" 文件夹用于存放局部组件。")],-1),f=(0,t._)("p",null,"按照这个规则，后续不管是修改还是调试，代码相对会比较清晰。",-1),v={render:function(n,s){const a=(0,t.up)("OutboundLink"),v=(0,t.up)("CodeGroupItem"),y=(0,t.up)("CodeGroup"),S=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,c,(0,t._)("p",null,[p,(0,t._)("a",o,[l,(0,t.Wm)(a)]),u]),k,(0,t.Wm)(y,null,{default:(0,t.w5)((()=>[(0,t.Wm)(v,{title:"方法 1"},{default:(0,t.w5)((()=>[i])),_:1}),(0,t.Wm)(v,{title:"方法 2"},{default:(0,t.w5)((()=>[r])),_:1})])),_:1}),d,(0,t._)("p",null,[_,h,U,(0,t.Wm)(S,{to:"/plop.html"},{default:(0,t.w5)((()=>[g])),_:1}),m]),x,b,f],64)}}}}]);